{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bdlee\\\\Desktop\\\\test-react-types\\\\react_20240812\\\\src\\\\components\\\\Exflie.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Define the types for the props (if needed) and state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  // Define the initial state using useState hook\n  const [loginState, setLoginState] = useState({\n    email: '',\n    password: '',\n    errorMessage: ''\n  });\n\n  // Handle input changes for both email and password\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLoginState(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  // Validate and handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = loginState;\n    if (!email || !password) {\n      setLoginState(prevState => ({\n        ...prevState,\n        errorMessage: 'Both fields are required'\n      }));\n      return;\n    }\n\n    // Simulate login success/failure\n    if (email === 'test@example.com' && password === 'password') {\n      setLoginState({\n        email: '',\n        password: '',\n        errorMessage: ''\n      });\n      alert('Login successful');\n    } else {\n      setLoginState(prevState => ({\n        ...prevState,\n        errorMessage: 'Invalid email or password'\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: loginState.email,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: loginState.password,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), loginState.errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: loginState.errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"handleSubmit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"ihPrCDM6xy3SuRQhL0hHhjYGhM0=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","loginState","setLoginState","email","password","errorMessage","handleInputChange","e","name","value","target","prevState","handleSubmit","preventDefault","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","style","color","_c","$RefreshReg$"],"sources":["C:/Users/bdlee/Desktop/test-react-types/react_20240812/src/components/Exflie.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\n// Define the types for the props (if needed) and state\r\ninterface IProps {\r\n  // You can pass additional props if needed\r\n}\r\n\r\ninterface ILoginState {\r\n  email: string\r\n  password: string\r\n  errorMessage: string\r\n}\r\n\r\nconst Login: React.FC<IProps> = () => {\r\n  // Define the initial state using useState hook\r\n  const [loginState, setLoginState] = useState<ILoginState>({\r\n    email: '',\r\n    password: '',\r\n    errorMessage: '',\r\n  })\r\n\r\n  // Handle input changes for both email and password\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target\r\n    setLoginState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  // Validate and handle form submission\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n\r\n    const { email, password } = loginState\r\n\r\n    if (!email || !password) {\r\n      setLoginState((prevState) => ({\r\n        ...prevState,\r\n        errorMessage: 'Both fields are required',\r\n      }))\r\n      return\r\n    }\r\n\r\n    // Simulate login success/failure\r\n    if (email === 'test@example.com' && password === 'password') {\r\n      setLoginState({\r\n        email: '',\r\n        password: '',\r\n        errorMessage: '',\r\n      })\r\n      alert('Login successful')\r\n    } else {\r\n      setLoginState((prevState) => ({\r\n        ...prevState,\r\n        errorMessage: 'Invalid email or password',\r\n      }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      {/* <form onSubmit={handleSubmit}> */}\r\n      <div>\r\n        <label>Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={loginState.email}\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={loginState.password}\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      {loginState.errorMessage && (\r\n        <p style={{ color: 'red' }}>{loginState.errorMessage}</p>\r\n      )}\r\n      <div>\r\n        <button type=\"handleSubmit\">Login</button>\r\n      </div>\r\n      {/* </form> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}